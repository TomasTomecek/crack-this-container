version: "3.1"
services:
  web:
    build: .
    ports:
     - "8000:8000"
    volumes:
     - ./crack_this_container/:/opt/app/crack_this_container:Z
    links:
     - db
    stdin_open: true
    tty: true
    environment:
      - POSTGRESQL_DATABASE=the_project
      - POSTGRESQL_USER=the_user
      - POSTGRESQL_PASSWORD=p4$$word
  migrator:
    build: .
    volumes:
     - ./crack_this_container/:/opt/app/crack_this_container:Z
    links:
     - web
     - db
    environment:
      - POSTGRESQL_DATABASE=the_project
      - POSTGRESQL_USER=the_user
      - POSTGRESQL_PASSWORD=p4$$word
    command: bash -c "python3 ./manage.py collectstatic -v 2 --noinput && python3 ./manage.py makemigrations && exec python3 ./manage.py migrate --no-input"
  ssh:
    build:
      context: .
      dockerfile: ./Dockerfile.sshd
    links:
     - web
    ports:
     - "22:22"
  redis:
    image: redis
    links:
     - web
  db:
    image: registry.access.redhat.com/rhscl/postgresql-96-rhel7
    volumes:
      - pgsql-data:/var/lib/pgsql/data
    environment:
      - POSTGRESQL_DATABASE=the_project
      - POSTGRESQL_USER=the_user
      - POSTGRESQL_PASSWORD=p4$$word
      # - POSTGRESQL_CONTAINER_OPTS=clear_pgdata_pidfile = true ; assert_external_data = false
volumes:
  pgsql-data: {}
